<?php


namespace app\api\controller;


use app\admin\model\ShopCategory;
use app\common\controller\Api;
use Exception;
use think\Db;
use think\exception\DbException;

/**
 * 分类管理
 */
class Category extends Api
{
    protected $noNeedLogin = '';
    protected $noNeedRight = '*';

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 添加分类
     * @param integer $shop_id 商家主键：id
     * @param string $name 分类名称
     * @param string $thumb_image 图片资源
     */
    public function postCategory($shop_id, $name, $thumb_image = '')
    {
        $shop_category = new ShopCategory();

        $shop_category->data('shop_id', $shop_id);
        $shop_category->data('name', $name);
        $shop_category->data('thumb_image', $thumb_image);

        $result = $shop_category->save();

        $result ? $this->success('添加成功') : $this->error('添加失败');
    }

    /**
     * 删除分类
     * @param integer $id 主键：id
     * @param integer $shop_id 商家主键：id
     * @throws DbException
     */
    public function deleteCategory($id, $shop_id)
    {
        $find = ShopCategory::get(['id' => $id, 'shop_id' => $shop_id]);
        if ($find) {
			// 查找商品
			$find_good = Db::name('good')->where(['shop_category_id'=>$id,'deletetime'=>null])->select();
			if(count($find_good)>0){
				$this->error('该分类下存在商品请删除后再操作');
			}
            $result = $find->delete();
            $result ? $this->success('删除成功') : $this->error('删除失败');
        } else {
            $this->error('未找到要删除的记录');
        }
    }

    /**
     * 更新分类
     * @param integer $id 主键：id
     * @param integer $shop_id 商家主键：id
     * @param string $data json格式的数据包
     * @throws DbException
     */
    public function putCategory($id, $shop_id, $data)
    {
        $find = ShopCategory::get(['id' => $id, 'shop_id' => $shop_id]);

        if ($find) {
            $data = json_decode(htmlspecialchars_decode($data), true);
            foreach ($data as $item => $value) {
                $find->data($item,$value);
            }
            $result = $find->save();
            $result ? $this->success('更新成功') : $this->error('更新失败');
        } else {
            $this->error('未找到要更新的记录');
        }
    }

    /**
     * 分类列表
     * @param integer $shop_id 商家主键：id
     * @throws DbException
     */
    public function getCategories($shop_id)
    {
        $result  = ShopCategory::where(['shop_id' => $shop_id,'status'=>'1'])
            ->order('weigh', 'desc')
            ->field('id,shop_id,name,thumb_image,status')
            ->paginate(null, false, $this->paginate)
            ->each(function ($item){
                $item['thumb_image'] = self::patch_oss($item['thumb_image']);
                return $item;
            });

        $result ? $this->success('获取成功', $result) : $this->success('暂无记录');
    }

    /**
     * 分类详情
     * @param integer $id 主键：id
     * @throws DbException
     */
    public function getCategory($id)
    {
        $result = ShopCategory::get($id);
        if($result){
            $result['thumb_image'] = self::patch_oss($result['thumb_image']);
            $this->success('获取成功', $result);
        }else{
            $this->error('获取失败');
        }
    }
}