<?php


namespace app\api\controller;


use app\api\model\ShopBalance;
use app\api\model\ShopBalanceLog;
use app\common\controller\Api;
use think\Db;
use think\exception\DbException;

/**
 * 财务管理
 */
class Finance extends Api
{
    protected $noNeedLogin = '';
    protected $noNeedRight = '*';

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 提现申请
     * @param int $shop_id 商家主键：id
     * @param string $bank 开户行
     * @param string $name 开户人姓名
     * @param string $bank_number 银行卡号
     * @param float $cash 提现金额
     */
    public function postFinance($shop_id, $bank, $name, $bank_number, $cash)
    {
        Db::startTrans();
        try {
            // 校验商家余额是否充足
            $balance = ShopBalance::get(['shop_id' => $shop_id]);
            if ($balance->balance < $cash) {
                throw new \Exception('商家余额不足');
            }

            $balanceLog = new ShopBalanceLog();
            $balanceLog->data('shop_id', $shop_id);
            $balanceLog->data('bank', $bank);
            $balanceLog->data('name', $name);
            $balanceLog->data('bank_number', $bank_number);
            $balanceLog->data('cash', $cash);
            $balanceLog->save();

            // 更新收益表
            $balance->data('bank', $bank);
            $balance->data('name', $name);
            $balance->data('bank_number', $bank_number);
            $balance->setDec('balance', $cash);
            $balance->setInc('cash', $cash);
            $balance->save();

            Db::commit();
        } catch (\Exception $e) {
            Db::rollback();
            $this->error($e->getMessage());
        }
        $this->success('申请成功');
    }

    /**
     * 提现申请记录
     * @param int $shop_id 商家主键：id
     * @throws DbException
     */
    public function getFinance($shop_id)
    {
        $result = ShopBalanceLog::where(['shop_id' => $shop_id])
            ->order('updatetime', 'desc')
            ->paginate(null, false, $this->paginate)
            ->each(function ($item) {
                $item['pay_time'] = date("Y-m-d H:i:s",$item['pay_time']);
                return $item;
            });
        $result ? $this->success('获取成功', $result) : $this->success('暂无记录');
    }

    /**
     * 获取提现信息
     * @param int $shop_id 商家主键：id
     * @throws DbException
     */
    public function getFinanceField($shop_id)
    {
        $result = ShopBalance::get(['shop_id' => $shop_id]);
        $result ? $this->success('获取成功', $result) : $this->success('暂无记录');
    }
}